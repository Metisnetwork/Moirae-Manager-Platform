<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.datum.platform.mapper.OrgMapper">
    <select id="getOrgList" resultType="com.datum.platform.mapper.domain.Org">
        select o.node_name,
               o.identity_id,
               o.status,
               o.update_at,
               o.image_url,
               so.org_total_core,
               so.org_total_memory,
               so.org_total_bandwidth,
               so.total_task,
               so.total_data_token,
               so.total_data,
               moe.is_authority,
               moe.is_certified
        from dc_org o left join mo_stats_org so on o.identity_id = so.identity_id
            left join mo_org_expand moe on o.identity_id = moe.identity_id
        where o.status = 1
        <if test="keyword != null and keyword != ''">
            and ( o.identity_id = #{keyword} or o.node_name like concat('%', #{keyword}, '%') )
        </if>
        order by ${orderBy}
    </select>

    <select id="getOrgDetails" resultType="com.datum.platform.mapper.domain.Org">
        select o.node_name,
               o.identity_id,
               o.status,
               o.update_at,
               o.image_url,
               so.org_total_core,
               so.org_total_memory,
               so.org_total_bandwidth,
               so.total_task,
               so.total_data_token,
               so.total_data,
               moe.is_authority,
               moe.is_certified
        from dc_org o left join mo_stats_org so on o.identity_id = so.identity_id
            left join mo_org_expand moe on o.identity_id = moe.identity_id
        where o.status = 1 and  o.identity_id = #{identityId}
    </select>
    <select id="getStatsOrg" resultType="com.datum.platform.mapper.domain.StatsOrg">
        select o.identity_id,
               power.total_core as orgTotalCore,
               power.total_memory as orgTotalMemory,
               power.total_bandwidth as orgTotalBandwidth,
               task.total_task as totalTask,
               token.total_data_token  as totalDataToken,
               data.total_data as totalData
        from dc_org o,
             (
                 select identity_id,
                        sum(core) as total_core,
                        sum(memory) as total_memory,
                        sum(bandwidth) as total_bandwidth
                 from dc_power_server
                 where identity_id = #{identityId,jdbcType=VARCHAR} and (status = 2 or status = 3)
             ) power,
             (
                 select count(dmd.meta_data_id) as total_data_token
                 from dc_meta_data dmd inner join mo_meta_data_marketplace mmdm on dmd.meta_data_id = mmdm.meta_data_id
                     inner join mo_meta_data_certificate mmdc on dmd.meta_data_id = mmdc.meta_data_id
                 where dmd.identity_id = #{identityId,jdbcType=VARCHAR} and dmd.status = 2
             ) token,
             (
                 select count(dmd.meta_data_id) as total_data
                 from dc_meta_data dmd inner join mo_meta_data_marketplace mmdm on dmd.meta_data_id = mmdm.meta_data_id
                 where dmd.identity_id = #{identityId,jdbcType=VARCHAR} and dmd.status = 2
             ) data,
             (
                 select count(distinct(t.task_id)) as total_task
                 from (
                          -- 发送者
                          select id as task_id from dc_task where owner_identity_id = #{identityId,jdbcType=VARCHAR}
                          union
                          -- 数据者
                          select task_id from dc_task_data_provider where identity_id = #{identityId,jdbcType=VARCHAR}
                          union
                          -- 算力提供者
                          select task_id from dc_task_power_provider where identity_id = #{identityId,jdbcType=VARCHAR}
                          union
                          -- 结果接收者
                          select task_id from dc_task_result_consumer where consumer_identity_id = #{identityId,jdbcType=VARCHAR}
                      ) t
             ) task
        where o.identity_id = #{identityId,jdbcType=VARCHAR}
    </select>
</mapper>
