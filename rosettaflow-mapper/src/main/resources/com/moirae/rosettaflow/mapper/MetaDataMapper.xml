<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.moirae.rosettaflow.mapper.MetaDataMapper">
    <select id="listDataFileByIdentityId" resultType="com.moirae.rosettaflow.dto.MetaDataDto">
        select df.meta_data_id,
               df.file_name as metaDataName,
               df.file_type,
               df.size,
               df.published_at,
               df.status,
               df.update_at,
               ifnull(t.task_count,0) task_count
        from dc_meta_data df
        left join
             (
                 select tmd.meta_data_id,
                        count(tmd.task_id) as task_count
                 from dc_task_data_provider tmd
                 group by tmd.meta_data_id
             ) t on df.meta_data_id = t.meta_data_id
        where df.identity_id = #{identityId,jdbcType=VARCHAR} and df.status = 2
        order by df.published_at desc
    </select>
    <select id="getDataFile" resultType="com.moirae.rosettaflow.dto.MetaDataDto">
        select df.meta_data_id,
               df.file_name as metaDataName,
               df.identity_id,
               (select do.node_name from dc_org do where do.identity_id = df.identity_id) as nodeName,
               df.file_type,
               df.industry,
               df.size,
               df.rows,
               df.columns,
               df.published_at,
               df.remarks,
               df.status,
               df.update_at,
               ifnull(t.task_count,0) AS task_count
        from dc_meta_data df
        left join
             (
                 select tmd.meta_data_id,
                        count(tmd.task_id) as task_count
                 from dc_task_data_provider tmd
                 group by tmd.meta_data_id
             ) t on df.meta_data_id = t.meta_data_id
        where df.meta_data_id = #{metaDataId,jdbcType=VARCHAR}
    </select>
    <select id="listByNameAndAuthAddress" resultType="com.moirae.rosettaflow.dto.MetaDataDto">
        select df.meta_data_id,
               df.file_name as metaDataName,
               df.file_type,
               df.size,
               df.published_at,
               df.status,
               df.update_at,
               do.identity_id,
               do.node_name,
               <choose>
                    <when test="address != null and address != ''">
                        (select dmda.auth_status from dc_meta_data_auth dmda where dmda.meta_data_id = df.meta_data_id and dmda.user_id = #{address,jdbcType=VARCHAR} order by dmda.apply_at desc limit 1) as auth_status,
                        (select dmda.audit_option from dc_meta_data_auth dmda where dmda.meta_data_id = df.meta_data_id and dmda.user_id = #{address,jdbcType=VARCHAR} order by dmda.apply_at desc limit 1) as audit_option,
                    </when>
                    <otherwise>
                        0 as metaDataAuthStatus,
                        -1 as metaDataAuthOption,
                    </otherwise>
               </choose>
               df.industry
        from dc_meta_data df join dc_org do on df.identity_id = do.identity_id
        <where>
            df.status = 2 and do.status = 1
            <if test="dataName != null and dataName != ''">
                and df.file_name like concat('%', #{dataName, jdbcType=VARCHAR}, '%')
            </if>
        </where>
        order by df.published_at
    </select>
    <select id="listMetaDataAuth" resultType="com.moirae.rosettaflow.dto.MetaDataDto">
        select df.meta_data_id,
               df.status,
               df.file_name as metaDataName,
               dmda.meta_data_auth_id,
               dmda.auth_type,
               dmda.start_at,
               dmda.end_at,
               dmda.times,
               dmda.apply_at,
               dmda.audit_option,
               dmda.auth_status,
               do.identity_id,
               do.node_name
        from dc_meta_data_auth dmda join dc_meta_data df on dmda.meta_data_id = df.meta_data_id join dc_org do on df.identity_id = do.identity_id
        where dmda.user_id = #{address,jdbcType=VARCHAR}
        <if test="dataName != null and dataName != ''">
            and df.file_name like concat('%',#{dataName, jdbcType=VARCHAR},'%')
        </if>
        order by dmda.apply_at desc
    </select>
    <select id="getMetaDataAuthDetails" resultType="com.moirae.rosettaflow.dto.MetaDataDto">
        select df.meta_data_id,
               df.status,
               df.file_name as metaDataName,
               df.industry,
               df.published_at,
               df.update_at,
               df.file_type,
               df.size,
               df.columns,
               df.rows,
               df.remarks,
               dmda.auth_type,
               dmda.start_at,
               dmda.end_at,
               dmda.times,
               dmda.apply_at,
               dmda.used_times,
               do.identity_id,
               do.node_name
        from dc_meta_data_auth dmda join dc_meta_data df on dmda.meta_data_id = df.meta_data_id join dc_org do on df.identity_id = do.identity_id
        where dmda.meta_data_auth_id = #{metaDataAuthId, jdbcType=VARCHAR}
    </select>
    <select id="getOrgChooseListByMetaDataAuth" resultType="com.moirae.rosettaflow.dto.MetaDataDto">
        select do.identity_id,
               do.node_name
        from dc_meta_data_auth dmda join dc_meta_data df on dmda.meta_data_id = df.meta_data_id join dc_org do on df.identity_id = do.identity_id
        where dmda.user_id = #{address,jdbcType=VARCHAR}
          and df.status = 2
          and dmda.auth_status = 2
          and do.status = 1
          and ((dmda.auth_type = 1 AND dmda.expired = 0) or (dmda.auth_type = 2 AND dmda.used_times &lt; dmda.times))
        group by do.identity_id, do.node_name
        order by do.node_name
    </select>
    <select id="getMetaDataByChoose" resultType="com.moirae.rosettaflow.dto.MetaDataDto">
        select df.meta_data_id,
               df.identity_id,
               df.file_name as metaDataName
        from dc_meta_data_auth dmda join dc_meta_data df on dmda.meta_data_id = df.meta_data_id join dc_org do on df.identity_id = do.identity_id
        where dmda.user_id = #{address,jdbcType=VARCHAR}
            and df.status = 2
            and dmda.auth_status = 2
            and dmda.audit_option = 1
            and do.status = 1
            and df.identity_id = #{identityId, jdbcType=VARCHAR}
            and ((dmda.auth_type = 1 AND dmda.expired = 0) or (dmda.auth_type = 2 AND dmda.used_times &lt; dmda.times))
    </select>
    <select id="getDataListByOrg" resultType="com.moirae.rosettaflow.mapper.domain.MetaData">
        select dmd.meta_data_id,
               dmd.file_name as metaDataName,
               dmd.identity_id,
               do.node_name,
               mt.name as tokenName,
               mt.price as tokenPrice
        from dc_meta_data dmd
            inner join dc_org do on dmd.identity_id = do.identity_id
            inner join mo_token mt on dmd.token_address = mt.address
        where dmd.status = 2
            and mt.is_add_liquidity = 1
            and dmd.identity_id = #{identityId}
        order by dmd.published_at desc
    </select>
    <select id="getDataList" resultType="com.moirae.rosettaflow.mapper.domain.MetaData">
        select dmd.meta_data_id,
               dmd.file_name as metaDataName,
               dmd.identity_id,
               do.node_name,
               mt.name as tokenName,
               mt.price as tokenPrice
        from dc_meta_data dmd
            inner join dc_org do on dmd.identity_id = do.identity_id
            inner join mo_token mt on dmd.token_address = mt.address
        where dmd.status = 2
            and mt.is_add_liquidity = 1
            <if test="keyword != null and keyword != ''">
                and ( dmd.meta_data_id = #{keyword} or mt.name like concat('%', #{keyword}, '%') )
            </if>
            <if test="industry != null and industry != ''">
                and dmd.industry = #{industry}
            </if>
            <if test="fileType != null">
                and dmd.file_type = #{fileType}
            </if>
            <if test="minSize != null">
                and dmd.size <![CDATA[>=]]> #{minSize}
            </if>
            <if test="maxSize != null">
                and dmd.size <![CDATA[<=]]> #{maxSize}
             </if>
        order by ${orderBy}
    </select>
    <select id="getDataDetails" resultType="com.moirae.rosettaflow.mapper.domain.MetaData">
        select dmd.meta_data_id,
               dmd.file_name as metaDataName,
               dmd.identity_id,
               do.node_name,
               mt.name as tokenName,
               mt.price as tokenPrice,
               dmd.file_type,
               mt.symbol as tokenSymbol,
               dmd.published_at,
               dmd.industry,
               dmd.size,
               dmd.rows,
               dmd.columns,
               dmd.remarks
        from dc_meta_data dmd
                 inner join dc_org do on dmd.identity_id = do.identity_id
                 inner join mo_token mt on dmd.token_address = mt.address
        where dmd.status = 2
            and mt.is_add_liquidity = 1
            and dmd.meta_data_id = #{metaDataId}
    </select>
    <select id="getUserDataList" resultType="com.moirae.rosettaflow.mapper.domain.MetaData">
        select dmd.meta_data_id,
               dmd.file_name as metaDataName,
               dmd.identity_id,
               do.node_name,
               mt.name as tokenName,
               mt.price as tokenPrice,
               mt.symbol as tokenSymbol,
               mt.`decimal` as tokenDecimal,
               mth.balance as tokenBalance
        from dc_meta_data dmd
                 inner join dc_org do on dmd.identity_id = do.identity_id
                 inner join mo_token mt on dmd.token_address = mt.address
                 inner join mo_token_holder mth on mt.address = mth.token_address and mth.address = #{address}
        where dmd.status = 2
          and mt.is_add_liquidity = 1
        order by mth.balance desc
    </select>
    <select id="getDataCount" resultType="java.lang.Integer">
        select count(1)
        from dc_meta_data dmd inner join mo_token mt on dmd.token_address = mt.address
        where  mt.is_add_liquidity = 1 and dmd.status = 2
    </select>
</mapper>
