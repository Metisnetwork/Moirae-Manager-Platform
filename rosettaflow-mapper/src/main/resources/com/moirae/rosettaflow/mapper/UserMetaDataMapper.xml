<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.moirae.rosettaflow.mapper.UserMetaDataMapper">
    <resultMap id="BaseResultMap" type="com.moirae.rosettaflow.mapper.domain.UserMetaData">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="meta_data_id" jdbcType="VARCHAR" property="metaDataId" />
        <result column="identity_id" jdbcType="VARCHAR" property="identityId" />
        <result column="identity_name" jdbcType="VARCHAR" property="identityName" />
        <result column="node_id" jdbcType="VARCHAR" property="nodeId" />
        <result column="address" jdbcType="VARCHAR" property="address" />
        <result column="auth_type" jdbcType="TINYINT" property="authType" />
        <result column="auth_value" jdbcType="BIGINT" property="authValue" />
        <result column="auth_begin_time" jdbcType="TIMESTAMP" property="authBeginTime" />
        <result column="auth_end_time" jdbcType="TIMESTAMP" property="authEndTime" />
        <result column="auth_status" jdbcType="TINYINT" property="authStatus" />
        <result column="audit_suggestion" jdbcType="VARCHAR" property="auditSuggestion" />
        <result column="apply_time" jdbcType="TIMESTAMP" property="applyTime" />
        <result column="audit_time" jdbcType="TIMESTAMP" property="auditTime" />
        <result column="auth_metadata_state" jdbcType="TINYINT" property="authMetadataState" />
        <result column="expire" jdbcType="TINYINT" property="expire" />
        <result column="used_times" jdbcType="BIGINT" property="usedTimes" />
        <result column="metadata_auth_id" jdbcType="VARCHAR" property="metadataAuthId" />
        <result column="status" jdbcType="TINYINT" property="status" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    </resultMap>
    <sql id="Base_Column_List">
        id, meta_data_id, identity_id, identity_name, node_id, address, auth_type, auth_value,
        auth_begin_time, auth_end_time, auth_status, audit_suggestion, apply_time, audit_time,
        auth_metadata_state, expire, used_times, metadata_auth_id, `status`, create_time, update_time
    </sql>

    <update id="truncate">
        TRUNCATE TABLE t_user_meta_data
    </update>
    <select id="listByOwner" resultType="com.moirae.rosettaflow.dto.UserMetaDataDto">
        SELECT
            m.id AS 'metaDataPkId',
            m.data_name,
            u.id,
            u.meta_data_id,
            u.identity_id,
            u.identity_name,
            u.node_id,
            u.address,
            u.auth_type,
            u.auth_value,
            u.auth_begin_time,
            u.auth_end_time,
            u.auth_status,
            u.apply_time,
            u.audit_time,
            u.`status`,
            u.create_time,
            u.update_time
        FROM
            t_user_meta_data u
        LEFT JOIN t_meta_data m ON u.meta_data_id = m.meta_data_id
        WHERE
            u.address = #{address,jdbcType=VARCHAR}
            AND u.`status` = 1
            <if test="dataName != null and dataName != ''">
                AND m.data_name like concat('%',#{dataName, jdbcType=VARCHAR},'%')
            </if>
            ORDER BY u.apply_time DESC
    </select>
    <select id="getUserMetaDataByAddress" resultType="com.moirae.rosettaflow.dto.UserMetaDataDto">
        SELECT DISTINCT
            umd.identity_id,
            umd.identity_name
        FROM t_user_meta_data umd
                 INNER JOIN
             t_user u
             ON umd.address = u.address
        WHERE ((umd.auth_type = 1 AND expire = 0)
            OR (umd.auth_type = 2 AND used_times &lt; auth_value))
          AND umd.`status` = 1
          AND umd.auth_status = 1
          AND umd.auth_metadata_state = 2
          AND umd.address = #{address, jdbcType=VARCHAR}
    </select>

    <!-- 更新按次数授权数据的次数 -->
    <update id="updateTimesByMetaDataId">
        <foreach collection="metaDataIdList" item="metaDataId" separator=";">
            update
                t_user_meta_data
            set
                used_times = used_times + 1
            where
                `status` = 1
                AND auth_value &gt;= 1
                AND auth_status = 1
                AND auth_type = 2
                AND auth_metadata_state = 2
                AND address = #{address, jdbcType=VARCHAR}
                AND meta_data_id = #{metaDataId, jdbcType=VARCHAR}
        </foreach>
    </update>

    <insert id="batchInsert">
        <foreach collection="userMetaDataList" item="userMetaData" separator=";">
            replace into t_user_meta_data
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="userMetaData.metaDataId != null">
                    meta_data_id,
                </if>
                <if test="userMetaData.identityId != null">
                    identity_id,
                </if>
                <if test="userMetaData.identityName != null">
                    identity_name,
                </if>
                <if test="userMetaData.nodeId != null">
                    node_id,
                </if>
                <if test="userMetaData.address != null">
                    address,
                </if>
                <if test="userMetaData.authType != null">
                    auth_type,
                </if>
                <if test="userMetaData.authValue != null">
                    auth_value,
                </if>
                <if test="userMetaData.authBeginTime != null">
                    auth_begin_time,
                </if>
                <if test="userMetaData.authEndTime != null">
                    auth_end_time,
                </if>
                <if test="userMetaData.authStatus != null">
                    auth_status,
                </if>
                <if test="userMetaData.auditSuggestion != null">
                    audit_suggestion,
                </if>
                <if test="userMetaData.applyTime != null">
                    apply_time,
                </if>
                <if test="userMetaData.auditTime != null">
                    audit_time,
                </if>
                <if test="userMetaData.authMetadataState != null">
                    auth_metadata_state,
                </if>
                <if test="userMetaData.expire != null">
                    expire,
                </if>
                <if test="userMetaData.usedTimes != null">
                    used_times,
                </if>
                <if test="userMetaData.status != null">
                    `status`,
                </if>
                <if test="userMetaData.createTime != null">
                    create_time,
                </if>
                <if test="userMetaData.updateTime != null">
                    update_time,
                </if>
            </trim>
            <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="userMetaData.metaDataId != null">
                    #{userMetaData.metaDataId,jdbcType=VARCHAR},
                </if>
                <if test="userMetaData.identityId != null">
                    #{userMetaData.identityId,jdbcType=VARCHAR},
                </if>
                <if test="userMetaData.identityName != null">
                    #{userMetaData.identityName,jdbcType=VARCHAR},
                </if>
                <if test="userMetaData.nodeId != null">
                    #{userMetaData.nodeId,jdbcType=VARCHAR},
                </if>
                <if test="userMetaData.address != null">
                    #{userMetaData.address,jdbcType=VARCHAR},
                </if>
                <if test="userMetaData.authType != null">
                    #{userMetaData.authType,jdbcType=TINYINT},
                </if>
                <if test="userMetaData.authValue != null">
                    #{userMetaData.authValue,jdbcType=BIGINT},
                </if>
                <if test="userMetaData.authBeginTime != null">
                    #{userMetaData.authBeginTime,jdbcType=TIMESTAMP},
                </if>
                <if test="userMetaData.authEndTime != null">
                    #{userMetaData.authEndTime,jdbcType=TIMESTAMP},
                </if>
                <if test="userMetaData.authStatus != null">
                    #{userMetaData.authStatus,jdbcType=TINYINT},
                </if>
                <if test="userMetaData.auditSuggestion != null">
                    #{userMetaData.auditSuggestion,jdbcType=VARCHAR},
                </if>
                <if test="userMetaData.applyTime != null">
                    #{userMetaData.applyTime,jdbcType=TIMESTAMP},
                </if>
                <if test="userMetaData.auditTime != null">
                    #{userMetaData.auditTime,jdbcType=TIMESTAMP},
                </if>
                <if test="userMetaData.authMetadataState != null">
                    #{userMetaData.authMetadataState,jdbcType=TINYINT},
                </if>
                <if test="userMetaData.expire != null">
                    #{userMetaData.expire,jdbcType=TINYINT},
                </if>
                <if test="userMetaData.usedTimes != null">
                    #{userMetaData.usedTimes,jdbcType=BIGINT},
                </if>
                <if test="userMetaData.status != null">
                    #{userMetaData.status,jdbcType=TINYINT},
                </if>
                <if test="userMetaData.createTime != null">
                    #{userMetaData.createTime,jdbcType=TIMESTAMP},
                </if>
                <if test="userMetaData.updateTime != null">
                    #{userMetaData.updateTime,jdbcType=TIMESTAMP},
                </if>
            </trim>
        </foreach>
    </insert>
</mapper>