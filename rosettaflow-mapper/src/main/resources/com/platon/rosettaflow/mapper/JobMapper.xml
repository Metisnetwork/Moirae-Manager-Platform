<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platon.rosettaflow.mapper.JobMapper">
  <resultMap id="BaseResultMap" type="com.platon.rosettaflow.mapper.domain.Job">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="workflow_id" jdbcType="BIGINT" property="workflowId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
    <result column="repeat_flag" jdbcType="TINYINT" property="repeatFlag" />
    <result column="repeat_interval" jdbcType="INTEGER" property="repeatInterval" />
    <result column="begin_time" jdbcType="TIMESTAMP" property="beginTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="job_status" jdbcType="TINYINT" property="jobStatus" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>

  <sql id="Base_Column_List">
    id, workflow_id, `name`, `desc`, repeat_flag, repeat_interval, begin_time, end_time, 
    job_status, `status`, create_time, update_time
  </sql>


  <resultMap id="BaseResultMapWithWorkFlow" type="com.platon.rosettaflow.dto.JobDto" extends="BaseResultMap">
    <result column="workflow_name" jdbcType="VARCHAR" property="workflowName" />
  </resultMap>


  <select id="queryJobList" resultMap="BaseResultMapWithWorkFlow">
    SELECT
      tj.*,tw.workflow_name
    FROM
      t_job AS tj
      LEFT JOIN t_workflow AS tw ON tj.workflow_id = tw.id
    <where>
      AND tj.status = 1
      <if test="jobName != null and jobName != ''">
      AND  tj.`name` LIKE CONCAT('%',#{jobName, jdbcType=VARCHAR},'%')
      </if>
    </where>
    ORDER BY
      tj.create_time DESC
  </select>



  <update id="updateJobById" parameterType="com.platon.rosettaflow.mapper.domain.Job">
    update t_job
    set workflow_id = #{workflowId,jdbcType=INTEGER},
        name= #{name,jdbcType=VARCHAR},
        `desc` =  #{desc,jdbcType=VARCHAR},
        repeat_flag = #{repeatFlag,jdbcType=INTEGER},
        repeat_interval = #{repeatInterval,jdbcType=INTEGER},
        begin_time = #{beginTime,jdbcType=TIMESTAMP},
        end_time = #{endTime,jdbcType=TIMESTAMP},
        job_status = #{jobStatus,jdbcType=INTEGER},
        `status` = #{status,jdbcType=INTEGER},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>